#DPATCHLEVEL=0
# Reduce duplicate code in xosd_display()
--- src/libxosd/xosd.c~	2004-08-02 17:43:25.000000000 +0200
+++ src/libxosd/xosd.c	2004-08-02 18:04:46.000000000 +0200
@@ -239,15 +239,12 @@ draw_bar(xosd * osd, Drawable d, GC gc, 
 
     // fix x coord
     switch (osd->align) {
-    case XOSD_left:
-      break;
     case XOSD_center:
       x = (osd->screen_width - (nbars * barw)) / 2;
       break;
     case XOSD_right:
       x = osd->screen_width - (nbars * barw) - x;
-      break;
-    default:
+    case XOSD_left:
       break;
     }
   }
@@ -270,9 +267,9 @@ draw_bar(xosd * osd, Drawable d, GC gc, 
                      b->h + (2 * osd->outline_offset));
     }
   }
-/*
- * Shadow 
- */
+  /*
+   * Shadow 
+   */
   if (osd->shadow_offset && (draw_all || !(osd->fill_mask & FILL_SHADOW))) {
     if (set_color)
       XSetForeground(osd->display, gc, osd->shadow_pixel);
@@ -350,44 +347,35 @@ expose_line(xosd * osd, int line)
 
   switch (l->type) {
   case LINE_blank:
-    break;
+    return;
 
   case LINE_text:
     if (l->text == NULL)
-      break;
-    if (!osd->fontset) {
-      DEBUG(Dtrace, "CRITICAL: No fontset");
       return;
-    }
 
     switch (osd->align) {
-    case XOSD_left:
-      break;
     case XOSD_center:
       x = (osd->screen_width - l->width) / 2;
       break;
     case XOSD_right:
       x = osd->screen_width - l->width - x;
-      break;
-    default:
+    case XOSD_left:
       break;
     }
 
     osd->extent->y -= osd->outline_offset;
     if (osd->shadow_offset) {
-
       XSetForeground(osd->display, osd->gc, osd->shadow_pixel);
 
       draw_with_mask(osd, l,
                      x + osd->shadow_offset,
                      y, osd->shadow_offset - osd->extent->y,
                      !(osd->fill_mask & FILL_SHADOW));
-
     }
 
     if (osd->outline_offset) {
-      XSetForeground(osd->display, osd->gc, osd->outline_pixel);
       int draw_line_bitmap = !(osd->fill_mask & FILL_OUTLINE);
+      XSetForeground(osd->display, osd->gc, osd->outline_pixel);
 
       /* FIXME: echo . | osd_cat -O 50 -p middle -A center */
       for (i = 1; i <= osd->outline_offset; i++) {
@@ -401,30 +389,22 @@ expose_line(xosd * osd, int line)
         draw_with_mask(osd, l, x + i, y,  i - osd->extent->y, draw_line_bitmap);
       }
     }
-
-    XSetForeground(osd->display, osd->gc, osd->pixel);
-
     osd->extent->y += osd->outline_offset;
 
+    XSetForeground(osd->display, osd->gc, osd->pixel);
     draw_with_mask(osd, l, x, y, -osd->extent->y,
                    !(osd->fill_mask & FILL_FACE));
-    XCopyArea(osd->display, osd->line_bitmap, osd->window, osd->gc, 0, 0,
-              osd->screen_width, osd->line_height, 0, y);
     break;
 
   case LINE_percentage:
   case LINE_slider:
-
     switch (osd->align) {
-    case XOSD_left:
-      break;
     case XOSD_center:
       x = osd->screen_width * ((1 - SLIDER_SCALE) / 2);
       break;
     case XOSD_right:
       x = osd->screen_width * (1 - SLIDER_SCALE);
-      break;
-    default:
+    case XOSD_left:
       break;
     }
 
@@ -432,12 +412,10 @@ expose_line(xosd * osd, int line)
              l->type == LINE_slider, 0, 1);
     draw_bar(osd, osd->line_bitmap, osd->gc, x, 0, l->percentage,
              l->type == LINE_slider, 1, 0);
-
-    XCopyArea(osd->display, osd->line_bitmap, osd->window, osd->gc, 0, 0,
-              osd->screen_width, osd->line_height, 0, y);
-
     break;
   }
+  XCopyArea(osd->display, osd->line_bitmap, osd->window, osd->gc, 0, 0,
+            osd->screen_width, osd->line_height, 0, y);
 }
 
 /** Handle X11 events and timeouts.
@@ -580,40 +558,6 @@ display_string(xosd * osd, xosd_line * l
   return 0;
 }
 
-static int
-display_percentage(xosd * osd, xosd_line * l, int percentage)
-{
-  assert(osd);
-  FUNCTION_START(Dfunction);
-
-  if (percentage < 0)
-    percentage = 0;
-  if (percentage > 100)
-    percentage = 100;
-
-  l->type = LINE_percentage;
-  l->percentage = percentage;
-
-  return 0;
-}
-
-static int
-display_slider(xosd * osd, xosd_line * l, int percentage)
-{
-  assert(osd);
-  FUNCTION_START(Dfunction);
-
-  if (percentage < 0)
-    percentage = 0;
-  if (percentage > 100)
-    percentage = 100;
-
-  l->type = LINE_slider;
-  l->percentage = percentage;
-
-  return 0;
-}
-
 static void
 resize(xosd * osd)
 {                               /* Requires mutex lock. */
@@ -1133,10 +1077,8 @@ xosd_set_bar_length(xosd * osd, int leng
 int
 xosd_display(xosd * osd, int line, xosd_command command, ...)
 {
-  int len;
+  int ret = -1;
   va_list a;
-  char *string;
-  int percent;
   xosd_line *l = &osd->lines[line];
 
   FUNCTION_START(Dfunction);
@@ -1151,51 +1093,37 @@ xosd_display(xosd * osd, int line, xosd_
   va_start(a, command);
   switch (command) {
   case XOSD_string:
-    {
-      string = va_arg(a, char *);
-      len = display_string(osd, l, string);
-      break;
-    }
-
   case XOSD_printf:
     {
       char buf[2000];
-
-      string = va_arg(a, char *);
-      if (vsnprintf(buf, sizeof(buf), string, a) >= sizeof(buf)) {
-        return -1;
+      char *string = va_arg(a, char *);
+      if (command == XOSD_printf) {
+        if (vsnprintf(buf, sizeof(buf), string, a) >= sizeof(buf)) {
+          xosd_error = "xosd_display: Buffer too small";
+          goto error;
+        }
+        string = buf;
       }
-      len = display_string(osd, l, buf);
+      ret = display_string(osd, l, string);
       break;
     }
 
   case XOSD_percentage:
-    {
-      percent = va_arg(a, int);
-
-      display_percentage(osd, l, percent);
-
-      len = percent;
-      break;
-    }
-
   case XOSD_slider:
     {
-      percent = va_arg(a, int);
-
-      display_slider(osd, l, percent);
-
-      len = percent;
+      ret = va_arg(a, int);
+      ret = (ret < 0) ? 0 : (ret > 100) ? 100 : ret;
+      l->type = (command == XOSD_percentage) ? LINE_percentage : LINE_slider;
+      l->percentage = ret;
       break;
     }
 
   default:
     {
-      len = -1;
       xosd_error = "xosd_display: Unknown command";
+      goto error;
     }
   }
-  va_end(a);
 
   _xosd_lock(osd);
   force_redraw(osd, line);
@@ -1205,7 +1133,9 @@ xosd_display(xosd * osd, int line, xosd_
     show(osd);
   _xosd_unlock(osd);
 
-  return len;
+error:
+  va_end(a);
+  return ret;
 }
 /* }}} */
 
