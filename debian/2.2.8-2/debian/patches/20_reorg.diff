#DPATCHLEVEL=0
# Document variabled:
# - CONST: never changes after initialization
# - CONF: configuration values
# - CACHE: cached value, computed directly or indirectly from configuration
# - DYN: dynamic  value, changes during runtime
# pixel is 'unsigned long', not 'unsigned int'
# Reorder some code blocks
--- src/libxosd/xosd.c.orig	2004-08-04 13:46:57.000000000 +0200
+++ src/libxosd/xosd.c	2004-08-04 13:47:49.000000000 +0200
@@ -95,58 +95,58 @@ typedef struct
 
 struct xosd
 {
-  pthread_t event_thread;       /* handles X events */
+  pthread_t event_thread;       /* CONST handles X events */
 
-  pthread_mutex_t mutex;        /* serialize X11 and structure */
-  pthread_cond_t cond_wait;     /* signal X11 done */
-  int pipefd[2];                /* signal X11 needed */
-
-  pthread_mutex_t mutex_hide;   /* mutual exclusion for show/hide */
-  pthread_cond_t cond_hide;     /* signal hide events */
-
-  Display *display;
-  int screen;
-  Window window;
-  unsigned int depth;
-  Pixmap mask_bitmap;           /* XShape mask */
-  Pixmap line_bitmap;           /* offscreen bitmap */
-  Visual *visual;
-
-  XFontSet fontset;
-  XRectangle *extent;
-
-  GC gc;
-  GC mask_gc;                   /* white on black to set XShape mask */
-  GC mask_gc_back;              /* black on white to clear XShape mask */
-
-  int screen_width;
-  int screen_height;
-  int screen_xpos;
-  int height;
-  int line_height;
-  xosd_pos pos;
-  xosd_align align;
-  int hoffset;
-  int voffset;
-  int shadow_offset;
-  XColor shadow_colour;
-  unsigned int shadow_pixel;
-  int outline_offset;
-  XColor outline_colour;
-  unsigned int outline_pixel;
-  int bar_length;
-
-  int mapped;
-  int done;
+  pthread_mutex_t mutex;        /* CONST serialize X11 and structure */
+  pthread_cond_t cond_wait;     /* CONST signal X11 done */
+  int pipefd[2];                /* CONST signal X11 needed */
+
+  pthread_mutex_t mutex_hide;   /* CONST mutual exclusion for show/hide */
+  pthread_cond_t cond_hide;     /* CONST signal hide events */
+
+  Display *display;             /* CONST x11 */
+  int screen;                   /* CONST x11 */
+  Window window;                /* CONST x11 */
+  unsigned int depth;           /* CONST x11 */
+  Pixmap mask_bitmap;           /* CACHE (font,offset) XShape mask */
+  Pixmap line_bitmap;           /* CACHE (font,offset) offscreen bitmap */
+  Visual *visual;               /* CONST x11 */
+
+  XFontSet fontset;             /* CACHE (font) */
+  XRectangle *extent;           /* CACHE (font) */
+
+  GC gc;                        /* CONST x11 */
+  GC mask_gc;                   /* CONST x11 white on black to set XShape mask */
+  GC mask_gc_back;              /* CONST x11 black on white to clear XShape mask */
+
+  int screen_width;             /* CONST x11 */
+  int screen_height;            /* CONST x11 */
+  int screen_xpos;              /* CONST x11 */
+  int height;                   /* CACHE (font) */
+  int line_height;              /* CACHE (font) */
+  xosd_pos pos;                 /* CONF */
+  xosd_align align;             /* CONF */
+  int hoffset;                  /* CONF */
+  int voffset;                  /* CONF */
+  int shadow_offset;            /* CONF */
+  XColor shadow_colour;         /* CONF */
+  unsigned long shadow_pixel;   /* CACHE (shadow_colour) */
+  int outline_offset;           /* CONF */
+  XColor outline_colour;        /* CONF */
+  unsigned long outline_pixel;  /* CACHE (outline_colour) */
+  int bar_length;               /* CONF */
+
+  int mapped;                   /* DYN */
+  int done;                     /* DYN */
 
-  unsigned int pixel;
-  XColor colour;
+  unsigned long pixel;          /* CACHE (pixel) */
+  XColor colour;                /* CONF */
 
-  xosd_line *lines;
-  int number_lines;
+  xosd_line *lines;             /* CONF */
+  int number_lines;             /* CONF */
 
-  int timeout;                  /* delta time */
-  struct timeval timeout_start; /* Absolute start of timeout */
+  int timeout;                  /* CONF delta time */
+  struct timeval timeout_start; /* DYN Absolute start of timeout */
 };
 
 /** Global error string. */
@@ -159,8 +159,7 @@ static void show(xosd *);
 static void hide(xosd *);
 static void update_pos(xosd * osd);
 
-/*
- * Serialize access to the X11 connection.
+/* Serialize access to the X11 connection. {{{
  *
  * Background: xosd needs a thread which handles X11 exposures. XWindowEvent()
  * blocks and would deny any other thread - especially the thread which calls
@@ -195,8 +194,9 @@ static /*inline*/ void _xosd_unlock(xosd
   pthread_cond_signal(&osd->cond_wait);
   pthread_mutex_unlock(&osd->mutex);
 }
+/* }}} */
 
-/* Draw percentage/slider bar. */
+/* Draw percentage/slider bar. {{{ */
 static void /*inline*/
 _draw_bar(xosd *osd, int nbars, int on, XRectangle *p, XRectangle *mod, int is_slider)
 {
@@ -277,8 +277,9 @@ draw_bar(xosd *osd, int line)
     _draw_bar(osd, nbars, on, &p, &m, is_slider);
   }
 }
+/* }}} */
 
-/* Draw text */
+/* Draw text. {{{ */
 static void /*inline*/
 _draw_text(xosd *osd, xosd_line *l, int x, int y)
 {
@@ -331,6 +332,7 @@ draw_text(xosd *osd, int line)
     _draw_text(osd, l, x, y);
   }
 }
+/* }}} */
 
 /* The specified line needs to be redrawn.
  * We don't draw directly to the screen but to the line_bitmap for speedup.
@@ -376,12 +378,14 @@ event_loop(void *osdv)
   FUNCTION_START(Dfunction);
   DEBUG(Dtrace, "event thread started");
   assert(osd);
-  usleep(500);
 
   xfd = ConnectionNumber(osd->display);
   max = (osd->pipefd[0] > xfd) ? osd->pipefd[0] : xfd;
 
   pthread_mutex_lock(&osd->mutex);
+  DEBUG(Dtrace, "Request exposure events");
+  XSelectInput(osd->display, osd->window, ExposureMask);
+
   while (!osd->done) {
     // DEBUG(Dtrace, "checking window event");
     int retval;
@@ -567,8 +571,9 @@ set_font(xosd * osd, const char *font)
   return 0;
 }
 
+/* Parse textual colour value. {{{ */
 static int
-parse_colour(xosd * osd, XColor * col, int *pixel, const char *colour)
+parse_colour(xosd *osd, XColor *col, unsigned long *pixel, const char *colour)
 {
   Colormap colourmap;
   int retval = 0;
@@ -596,7 +601,7 @@ parse_colour(xosd * osd, XColor * col, i
 
   return retval;
 }
-
+/* }}} */
 
 static int
 set_colour(xosd * osd, const char *colour)
@@ -700,9 +705,8 @@ xosd_init(const char *font, const char *
   xosd *osd = xosd_create(number_lines);
 
   FUNCTION_START(Dfunction);
-  if (osd == NULL) {
+  if (osd == NULL)
     return NULL;
-  }
 
   if (xosd_set_font(osd, font) == -1) {
       xosd_destroy(osd);
@@ -790,6 +794,7 @@ xosd_create(int number_lines)
   osd->timeout = -1;
   timerclear(&osd->timeout_start);
   osd->fontset = NULL;
+  osd->bar_length = -1; /* old automatic width calculation */
 
   DEBUG(Dtrace, "Display query");
   osd->display = XOpenDisplay(display);
@@ -837,9 +842,8 @@ xosd_create(int number_lines)
   if (screeninfo)
     XFree(screeninfo);
 #endif
+  osd->line_height = 10 /*Dummy value*/;
   osd->height = osd->line_height * osd->number_lines;
-  osd->bar_length = -1;         // init bar_length with -1: draw_bar
-  // behaves like unpached
 
   DEBUG(Dtrace, "creating X Window");
   setwinattr.override_redirect = 1;
@@ -879,9 +883,6 @@ xosd_create(int number_lines)
   DEBUG(Dtrace, "setting colour");
   set_colour(osd, osd_default_colour);
 
-  DEBUG(Dtrace, "Request exposure events");
-  XSelectInput(osd->display, osd->window, ExposureMask);
-
   DEBUG(Dtrace, "stay on top");
   stay_on_top(osd->display, osd->window);
 
@@ -1156,10 +1157,10 @@ xosd_set_font(xosd * osd, const char *fo
   int ret = 0;
 
   FUNCTION_START(Dfunction);
-  if (font == NULL)
-    return -1;
   if (osd == NULL)
     return -1;
+  if (font == NULL)
+    return -1;
 
   _xosd_lock(osd);
   ret = set_font(osd, font);
@@ -1225,9 +1226,9 @@ xosd_set_shadow_offset(xosd * osd, int s
   FUNCTION_START(Dfunction);
   if (osd == NULL)
     return -1;
-
   if (shadow_offset < 0)
     return -1;
+
   _xosd_lock(osd);
   osd->shadow_offset = shadow_offset;
   force_redraw(osd, -1);
@@ -1244,9 +1245,9 @@ xosd_set_outline_offset(xosd * osd, int 
   FUNCTION_START(Dfunction);
   if (osd == NULL)
     return -1;
-
   if (outline_offset < 0)
     return -1;
+
   _xosd_lock(osd);
   osd->outline_offset = outline_offset;
   force_redraw(osd, -1);
@@ -1379,6 +1380,7 @@ xosd_hide(xosd * osd)
   FUNCTION_START(Dfunction);
   if (osd == NULL)
     return -1;
+
   if (osd->mapped) {
     _xosd_lock(osd);
     hide(osd);
@@ -1408,6 +1410,7 @@ xosd_show(xosd * osd)
   FUNCTION_START(Dfunction);
   if (osd == NULL)
     return -1;
+
   if (!osd->mapped) {
     _xosd_lock(osd);
     show(osd);
